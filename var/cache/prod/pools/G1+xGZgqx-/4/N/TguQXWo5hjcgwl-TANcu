<?php return array (
  0 => 9223372036854775807,
  1 => 'O:34:"Doctrine\\ORM\\Mapping\\ClassMetadata":15:{s:19:"associationMappings";a:2:{s:4:"user";a:19:{s:9:"fieldName";s:4:"user";s:11:"joinColumns";a:1:{i:0;a:6:{s:4:"name";s:7:"user_id";s:6:"unique";b:0;s:8:"nullable";b:0;s:8:"onDelete";N;s:16:"columnDefinition";N;s:20:"referencedColumnName";s:2:"id";}}s:7:"cascade";a:0:{}s:10:"inversedBy";s:5:"posts";s:12:"targetEntity";s:15:"App\\Entity\\User";s:5:"fetch";i:2;s:4:"type";i:2;s:8:"mappedBy";N;s:12:"isOwningSide";b:1;s:12:"sourceEntity";s:20:"App\\Entity\\MicroPost";s:15:"isCascadeRemove";b:0;s:16:"isCascadePersist";b:0;s:16:"isCascadeRefresh";b:0;s:14:"isCascadeMerge";b:0;s:15:"isCascadeDetach";b:0;s:24:"sourceToTargetKeyColumns";a:1:{s:7:"user_id";s:2:"id";}s:20:"joinColumnFieldNames";a:1:{s:7:"user_id";s:7:"user_id";}s:24:"targetToSourceKeyColumns";a:1:{s:2:"id";s:7:"user_id";}s:13:"orphanRemoval";b:0;}s:7:"likedBy";a:19:{s:9:"fieldName";s:7:"likedBy";s:9:"joinTable";a:4:{s:4:"name";s:10:"post_likes";s:6:"schema";N;s:11:"joinColumns";a:1:{i:0;a:6:{s:4:"name";s:7:"post_id";s:6:"unique";b:0;s:8:"nullable";b:1;s:8:"onDelete";N;s:16:"columnDefinition";N;s:20:"referencedColumnName";s:2:"id";}}s:18:"inverseJoinColumns";a:1:{i:0;a:6:{s:4:"name";s:7:"user_id";s:6:"unique";b:0;s:8:"nullable";b:1;s:8:"onDelete";N;s:16:"columnDefinition";N;s:20:"referencedColumnName";s:2:"id";}}}s:12:"targetEntity";s:15:"App\\Entity\\User";s:8:"mappedBy";N;s:10:"inversedBy";s:10:"postsLiked";s:7:"cascade";a:0:{}s:13:"orphanRemoval";b:0;s:5:"fetch";i:2;s:4:"type";i:8;s:12:"isOwningSide";b:1;s:12:"sourceEntity";s:20:"App\\Entity\\MicroPost";s:15:"isCascadeRemove";b:0;s:16:"isCascadePersist";b:0;s:16:"isCascadeRefresh";b:0;s:14:"isCascadeMerge";b:0;s:15:"isCascadeDetach";b:0;s:16:"joinTableColumns";a:2:{i:0;s:7:"post_id";i:1;s:7:"user_id";}s:26:"relationToSourceKeyColumns";a:1:{s:7:"post_id";s:2:"id";}s:26:"relationToTargetKeyColumns";a:1:{s:7:"user_id";s:2:"id";}}}s:11:"columnNames";a:3:{s:2:"id";s:2:"id";s:4:"time";s:4:"time";s:4:"text";s:4:"text";}s:13:"fieldMappings";a:3:{s:2:"id";a:9:{s:9:"fieldName";s:2:"id";s:4:"type";s:7:"integer";s:5:"scale";i:0;s:6:"length";N;s:6:"unique";b:0;s:8:"nullable";b:0;s:9:"precision";i:0;s:2:"id";b:1;s:10:"columnName";s:2:"id";}s:4:"time";a:8:{s:9:"fieldName";s:4:"time";s:4:"type";s:8:"datetime";s:5:"scale";i:0;s:6:"length";N;s:6:"unique";b:0;s:8:"nullable";b:0;s:9:"precision";i:0;s:10:"columnName";s:4:"time";}s:4:"text";a:8:{s:9:"fieldName";s:4:"text";s:4:"type";s:6:"string";s:5:"scale";i:0;s:6:"length";i:280;s:6:"unique";b:0;s:8:"nullable";b:0;s:9:"precision";i:0;s:10:"columnName";s:4:"text";}}s:10:"fieldNames";a:3:{s:2:"id";s:2:"id";s:4:"time";s:4:"time";s:4:"text";s:4:"text";}s:15:"embeddedClasses";a:0:{}s:10:"identifier";a:1:{i:0;s:2:"id";}s:21:"isIdentifierComposite";b:0;s:4:"name";s:20:"App\\Entity\\MicroPost";s:9:"namespace";s:10:"App\\Entity";s:5:"table";a:1:{s:4:"name";s:10:"micro_post";}s:14:"rootEntityName";s:20:"App\\Entity\\MicroPost";s:11:"idGenerator";O:33:"Doctrine\\ORM\\Id\\IdentityGenerator":1:{s:47:"' . "\0" . 'Doctrine\\ORM\\Id\\IdentityGenerator' . "\0" . 'sequenceName";N;}s:25:"customRepositoryClassName";s:34:"App\\Repository\\MicroPostRepository";s:13:"generatorType";i:4;s:18:"lifecycleCallbacks";a:1:{s:10:"prePersist";a:1:{i:0;s:16:"setTimeOnPersist";}}}',
);